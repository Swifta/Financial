/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.swifta.sub.mats.operation.financial.v1_0;

import java.util.logging.Logger;

import com.swifta.financial.utils.TransactionService;

/**
 * This class was generated by Apache CXF 3.0.2 2014-11-15T17:44:54.926+01:00
 * Generated source version: 3.0.2
 * 
 */

@javax.jws.WebService(serviceName = "financials", portName = "FinancialPort", targetNamespace = "http://swifta.com/sub/mats/operation/financial/v1.0", wsdlLocation = "/Users/user/Documents/swifta/Financial/src/main/webapp/WEB-INF/wsdl/Financial.wsdl", endpointInterface = "com.swifta.sub.mats.operation.financial.v1_0.Financial")
public class FinancialPortImpl implements Financial {

	private static final Logger LOG = Logger.getLogger(FinancialPortImpl.class
			.getName());
	TransactionService transactionService = new TransactionService();

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.financial.v1_0.Financial#
	 * getaccounttransactionhistoryrequest(java.lang.String accountresource
	 * ,)java.lang.String otheraccountresource
	 * ,)javax.xml.datatype.XMLGregorianCalendar fromdate
	 * ,)javax.xml.datatype.XMLGregorianCalendar todate ,)java.lang.String
	 * nooftransactionhistory ,)java.lang.String transactionid
	 * ,)com.swifta.sub.mats.operation.financial.v1.EntryType
	 * transactionentrytype
	 * ,)com.swifta.sub.mats.operation.financial.v1.OperationType operationtype
	 * )*
	 */
	public com.swifta.sub.mats.operation.financial.v1.Getaccounttransactionhistoryresponse getaccounttransactionhistoryrequest(
			java.lang.String accountresource,
			java.lang.String otheraccountresource,
			javax.xml.datatype.XMLGregorianCalendar fromdate,
			javax.xml.datatype.XMLGregorianCalendar todate,
			java.lang.String nooftransactionhistory,
			java.lang.String transactionid,
			com.swifta.sub.mats.operation.financial.v1.EntryType transactionentrytype,
			com.swifta.sub.mats.operation.financial.v1.OperationType operationtype) {
		LOG.info("Executing operation getaccounttransactionhistoryrequest");
		System.out.println(accountresource);
		System.out.println(otheraccountresource);
		System.out.println(fromdate);
		System.out.println(todate);
		System.out.println(nooftransactionhistory);
		System.out.println(transactionid);
		System.out.println(transactionentrytype);
		System.out.println(operationtype);
		try {
			return transactionService.getaccounttransactionhistoryrequest(
					accountresource, otheraccountresource, fromdate, todate,
					nooftransactionhistory, transactionid,
					transactionentrytype, operationtype);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.financial.v1_0.Financial#cashoutrequest
	 * (java.lang.String orginatingresourceid ,)java.lang.String
	 * destinationresourceid ,)java.lang.String amount ,)java.lang.String
	 * sendingdescription ,)java.lang.String receivingdescription
	 * ,)com.swifta.sub.mats.operation.financial.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.sub.mats.operation.financial.v1.Cashoutresponse cashoutrequest(
			java.lang.String orginatingresourceid,
			java.lang.String destinationresourceid,
			java.lang.String amount,
			java.lang.String sendingdescription,
			java.lang.String receivingdescription,
			com.swifta.sub.mats.operation.financial.v1.ParameterExtension extensionparameters) {
		LOG.info("Executing operation cashoutrequest");
		System.out.println(orginatingresourceid);
		System.out.println(destinationresourceid);
		System.out.println(amount);
		System.out.println(sendingdescription);
		System.out.println(receivingdescription);
		System.out.println(extensionparameters);
		try {
			return transactionService.cashoutrequest(orginatingresourceid,
					destinationresourceid, amount, sendingdescription,
					receivingdescription, extensionparameters);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.financial.v1_0.Financial#
	 * gettransactionhistoryrequest
	 * (com.swifta.sub.mats.operation.financial.v1.Gettransactionhistoryparameter
	 * transactionhistoryparameter )*
	 */
	public com.swifta.sub.mats.operation.financial.v1.Gettransactionhistoryresponse gettransactionhistoryrequest(
			com.swifta.sub.mats.operation.financial.v1.Gettransactionhistoryparameter transactionhistoryparameter) {
		LOG.info("Executing operation gettransactionhistoryrequest");
		System.out.println(transactionhistoryparameter);
		try {
			return transactionService
					.gettransactionhistoryrequest(transactionhistoryparameter);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.swifta.sub.mats.operation.financial.v1_0.Financial#
	 * transfertobankaccountrequest(java.lang.String userresourceid
	 * ,)java.lang.String accountresourceid ,)java.lang.String amount
	 * ,)java.lang.String description ,)java.lang.String bankcode
	 * ,)java.lang.String bankaccountnumber
	 * ,)com.swifta.sub.mats.operation.financial.v1.ParameterExtension extension
	 * )*
	 */
	public com.swifta.sub.mats.operation.financial.v1.Transfertobankrequestresponse transfertobankaccountrequest(
			java.lang.String userresourceid,
			java.lang.String accountresourceid,
			java.lang.String amount,
			java.lang.String description,
			java.lang.String bankcode,
			java.lang.String bankaccountnumber,
			com.swifta.sub.mats.operation.financial.v1.ParameterExtension extension) {
		LOG.info("Executing operation transfertobankaccountrequest");
		System.out.println(userresourceid);
		System.out.println(accountresourceid);
		System.out.println(amount);
		System.out.println(description);
		System.out.println(bankcode);
		System.out.println(bankaccountnumber);
		System.out.println(extension);
		try {
			return transactionService.transfertobankaccountrequest(
					userresourceid, accountresourceid, amount, description,
					bankcode, bankaccountnumber, extension);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.financial.v1_0.Financial#depositfloat(java
	 * .lang.String orginatingresourceid ,)java.lang.String
	 * destinationresourceid ,)java.lang.String amount ,)java.lang.String
	 * sendingdescription ,)java.lang.String receivingdescription
	 * ,)com.swifta.sub.mats.operation.financial.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.sub.mats.operation.financial.v1.Depositfloatresponse depositfloat(
			java.lang.String orginatingresourceid,
			java.lang.String destinationresourceid,
			java.lang.String amount,
			java.lang.String sendingdescription,
			java.lang.String receivingdescription,
			com.swifta.sub.mats.operation.financial.v1.ParameterExtension extensionparameters) {
		LOG.info("Executing operation depositfloat");
		System.out.println(orginatingresourceid);
		System.out.println(destinationresourceid);
		System.out.println(amount);
		System.out.println(sendingdescription);
		System.out.println(receivingdescription);
		System.out.println(extensionparameters);
		try {
			return transactionService.depositfloat(orginatingresourceid,
					destinationresourceid, amount, sendingdescription,
					receivingdescription, extensionparameters);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.financial.v1_0.Financial#floattransferrequest
	 * (java.lang.String orginatingresourceid ,)java.lang.String
	 * destinationresourceid ,)java.lang.String amount ,)java.lang.String
	 * sendingdescription ,)java.lang.String receivingdescription
	 * ,)com.swifta.sub.mats.operation.financial.v1.ParameterExtension extension
	 * )*
	 */
	public com.swifta.sub.mats.operation.financial.v1.Floattransferresponse floattransferrequest(
			java.lang.String orginatingresourceid,
			java.lang.String destinationresourceid,
			java.lang.String amount,
			java.lang.String sendingdescription,
			java.lang.String receivingdescription,
			com.swifta.sub.mats.operation.financial.v1.ParameterExtension extension) {
		LOG.info("Executing operation floattransferrequest");
		System.out.println(orginatingresourceid);
		System.out.println(destinationresourceid);
		System.out.println(amount);
		System.out.println(sendingdescription);
		System.out.println(receivingdescription);
		System.out.println(extension);
		try {
			return transactionService.floattransferrequest(
					orginatingresourceid, destinationresourceid, amount,
					sendingdescription, receivingdescription, extension);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.financial.v1_0.Financial#cashinrequest(
	 * java.lang.String orginatingresourceid ,)java.lang.String
	 * destinationresourceid ,)java.lang.String amount ,)java.lang.String
	 * sendingdescription ,)java.lang.String receivingdescription
	 * ,)com.swifta.sub.mats.operation.financial.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.sub.mats.operation.financial.v1.Cashinresponse cashinrequest(
			java.lang.String orginatingresourceid,
			java.lang.String destinationresourceid,
			java.lang.String amount,
			java.lang.String sendingdescription,
			java.lang.String receivingdescription,
			com.swifta.sub.mats.operation.financial.v1.ParameterExtension extensionparameters) {
		LOG.info("Executing operation cashinrequest");
		System.out.println(orginatingresourceid);
		System.out.println(destinationresourceid);
		System.out.println(amount);
		System.out.println(sendingdescription);
		System.out.println(receivingdescription);
		System.out.println(extensionparameters);
		try {
			return transactionService.cashinrequest(orginatingresourceid,
					destinationresourceid, amount, sendingdescription,
					receivingdescription, extensionparameters);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.sub.mats.operation.financial.v1_0.Financial#adjustaccountrequest
	 * (java.lang.String description
	 * ,)com.swifta.sub.mats.operation.financial.v1
	 * .Adjustaccounttransactionparameters adjustaccountinstruction )*
	 */
	public com.swifta.sub.mats.operation.financial.v1.Adjustaccountresponse adjustaccountrequest(
			java.lang.String description,
			com.swifta.sub.mats.operation.financial.v1.Adjustaccounttransactionparameters adjustaccountinstruction) {
		LOG.info("Executing operation adjustaccountrequest");
		System.out.println(description);
		System.out.println(adjustaccountinstruction);
		try {
			return transactionService.adjustaccountrequest(description,
					adjustaccountinstruction);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

}
